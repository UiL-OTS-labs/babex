name: Build and Test App

on:
  push:
    branches: [ develop, main, ]
  pull_request:
    branches: [ develop, main, ]

jobs:
  build:

    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      max-parallel: 2
      matrix:
        node-version: [16]
        python-version: ['3.10']
        app: ['lab', 'parent']

    steps:
      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libldap2-dev libsasl2-dev libssl-dev gettext poppler-utils poppler-data libpoppler-cpp-dev
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          cd ${{ matrix.app }}
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install flake8 pytest
      - name: pip freeze
        run: |
          pip freeze
      - name: Lint with flake8
        run: |
          cd ${{ matrix.app }}
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Compile 18n
        run: |
          cd ${{ matrix.app }}
          python manage.py compilemessages
      - name: Run django tests
        run: |
          cd ${{ matrix.app }}
          python manage.py test
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'babex-vue/package-lock.json'
      - name: Install node deps
        run: |
          cd babex-vue
          npm ci
      - name: Lint Vue app
        run: |
          cd babex-vue
          npm run lint
      - name: Build Vue app
        if: always()  # continue with build when linting fails
        run: |
          cd babex-vue
          npm run dev
      - name: Integration tests
        run: |
          cd ${{ matrix.app }}/integration_tests
          pytest
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: pytest_logs
          path: ${{ matrix.app }}/integration_tests/latest_logs/
