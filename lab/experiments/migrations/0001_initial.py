# Generated by Django 4.0.7 on 2023-09-05 14:35

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import experiments.email


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.CharField(blank=True, default='', max_length=100)),
                ('outcome', models.CharField(choices=[('COMPLETED', 'experiments:appointment:outcome:completed'), ('NOSHOW', 'experiments:appointment:outcome:noshow'), ('EXCLUDED', 'experiments:appointment:outcome:excluded'), ('CANCELED', 'experiments:appointment:outcome:canceled')], max_length=20, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('reminder_sent', models.DateTimeField(null=True)),
            ],
            options={
                'ordering': ['creation_date'],
            },
        ),
        migrations.CreateModel(
            name='Call',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('STARTED', 'experiments:call:status:started'), ('NOREPLY', 'experiments:call:status:noreply'), ('CALLBACK', 'experiments:call:status:callback'), ('VOICEMAIL', 'experiments:call:status:voicemail'), ('EMAIL', 'experiments:call:status:email'), ('CONFIRMED', 'experiments:call:status:confirmed'), ('CANCELLED', 'experiments:call:status:cancelled'), ('EXCLUDE', 'experiments:call:status:exclude'), ('DEACTIVATE', 'experiments:call:status:deactivate')], default='STARTED', max_length=20)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DefaultCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('multilingual', models.CharField(choices=[('N', 'default_criteria:attribute:multilingual:no'), ('Y', 'default_criteria:attribute:multilingual:yes'), ('I', 'experiments:globals:indifferent')], default='N', max_length=1, verbose_name='default_criteria:attribute:multilingual')),
                ('sex', models.CharField(choices=[('M', 'default_criteria:attribute:sex:male'), ('F', 'default_criteria:attribute:sex:female'), ('I', 'experiments:globals:indifferent')], default='I', max_length=1, verbose_name='default_criteria:attribute:sex')),
                ('dyslexia', models.CharField(choices=[('Y', 'default_criteria:attribute:dyslexia:yes'), ('N', 'default_criteria:attribute:dyslexia:no'), ('I', 'experiments:globals:indifferent')], default='N', max_length=1, verbose_name='default_criteria:attribute:dyslexia')),
                ('min_age_days', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(28)])),
                ('min_age_months', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_age_days', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(28)])),
                ('max_age_months', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='experiment:attribute:name')),
                ('duration', models.TextField(verbose_name='experiment:attribute:duration')),
                ('compensation', models.TextField(verbose_name='experiment:attribute:compensation')),
                ('recruitment_target', models.IntegerField(default=0, help_text='experiment:attribute:recruitment_target:help', verbose_name='experiment:attribute:recruitment_target')),
                ('task_description', models.TextField(verbose_name='experiment:attribute:task_description')),
                ('additional_instructions', models.TextField(blank=True, verbose_name='experiment:attribute:additional_instructions')),
                ('confirmation_email', models.TextField(default='<p>Beste {{parent_name}},</p>\n    <p>\n        Je hebt een afspraak gemaakt om mee te doen met het experiment:\n        <strong>{{experiment_name}}</strong><br/><br/>\n        We verwachten je op:<br/><br/>\n        Datum: <strong>{{date}}</strong><br/>\n        Tijd: <strong>{{time}} uur</strong><br/>\n        Locatie: <strong>{{experiment_location}}</strong><br/>\n    </p>\n    <p>\n        Als je deze afspraak wilt afzeggen, kun je dat doen via\n        <a href="{{cancel_link}}">deze link</a>.\n        Doe dat alsjeblieft minstens 24 uur vantevoren. Als je vlak vantevoren\n        ontdekt dat je verhinderd bent, neem dan svp even persoonlijk contact\n        op met de testleider\n        ({{leader_name}}, email: {{leader_email}} tel.: {{leader_phonenumber}}).\n    </p>\n    <p>\n        Met vriendelijke groet,<br/>\n        het ILS lab\n    </p>', help_text=experiments.email.AppointmentConfirmEmail.help_text, verbose_name='experiment:attribute:confirmation_email')),
                ('invite_email', models.TextField(default='<p>Je kunt je weer opgeven voor een nieuw\n    experiment: <strong>{{experiment_name}}</strong>.</p>\n<p>De testleider is <strong>{{leader_name}}</strong>.\n<ul>\n    <li>Duur: {{duration}}.</li>\n    <li>Vergoeding: {{compensation}}.</li>\n    <li>{{task_description}}</li>\n    <li>{{additional_instructions}}</li>\n</ul>\n\n<p>Je kunt via {{link_to_subscribe:"deze link"}} inschrijven.</p>\n\n<p>Bedankt!</p>\n\n<p>\nMet vriendelijke groet,<br/>\n{{admin}}\n</p>', help_text='experiment:attribute:invite_email:help_text', verbose_name='experiment:attribute:invite_email')),
                ('use_timeslots', models.BooleanField(default=True, help_text='experiment:attribute:use_timeslots:help_text', verbose_name='experiment:attribute:use_timeslots')),
                ('open', models.BooleanField(default=False, help_text='experiment:attribute:open:help_text', verbose_name='experiment:attribute:open')),
                ('public', models.BooleanField(default=True, help_text='experiment:attribute:public:help_text', verbose_name='experiment:attribute:public')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='location:attribute:name')),
                ('route_url', models.URLField(blank=True, null=True, verbose_name='location:attribute:route_url')),
            ],
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(verbose_name='time_slot:attribute:start')),
                ('end', models.DateTimeField(verbose_name='time_slot:attribute:start')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.experiment')),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.experiment')),
            ],
        ),
    ]
